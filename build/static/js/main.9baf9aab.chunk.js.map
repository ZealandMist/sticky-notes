{"version":3,"sources":["Header.js","Note.js","NoteList.js","App.js","index.js"],"names":["Header","props","React","createElement","className","onClick","addNote","type","placeholder","value","searchText","onChange","e","onSearch","target","Note","note","title","event","updatedValue","editNoteId","id","onType","description","removeNote","NotesList","noteElements","notes","filter","doesMatchSearch","map","key","App","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","state","newNotes","Date","now","_toConsumableArray","setState","noteId","updatedNotes","updatedKey","text","newSearchText","toLowerCase","titleMatch","includes","descriptionMatch","hasMatch","_inherits","_createClass","notesString","localStorage","getItem","savedNotes","JSON","parse","stringify","setItem","NoteList","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9baf9aab.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n  const callSearch = (e) => {\n    props.onSearch(e.target.value);\n  };\n  return (\n    <header className=\"app-header\">\n      <h1 className=\"app-header__title\">Super Sticky Notes</h1>\n      <aside className=\"app-header__controls\">\n        <button className=\"add-new\" onClick={props.addNote}>\n          + New Note\n        </button>\n        <input\n          type=\"text\"\n          placeholder=\"Type here to search...\"\n          className=\"search\"\n          value={props.searchText}\n          onChange={callSearch}\n        />\n      </aside>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Note = (props) => {\n  const updateTitle = (event) => {\n    const updatedValue = event.target.value;\n    const editNoteId = props.note.id;\n    props.onType(editNoteId, \"title\", updatedValue);\n  };\n\n  const updateDescription = (event) => {\n    const updatedValue = event.target.value;\n    const editNoteId = props.note.id;\n    props.onType(editNoteId, \"description\", updatedValue);\n  };\n\n  const deleteNote = () => {\n    props.removeNote(props.note.id);\n  };\n\n  return (\n    <li className=\"note\">\n      <input\n        type=\"text\"\n        value={props.note.title}\n        onChange={updateTitle}\n        placeholder=\"Title\"\n        className=\"note__title\"\n      />\n      <textarea\n        value={props.note.description}\n        onChange={updateDescription}\n        placeholder=\"Description...\"\n        className=\"note__description\"\n      />\n      <span className=\"note__delete\" onClick={deleteNote}>\n        X\n      </span>\n    </li>\n  );\n};\nexport default Note;\n","import React from \"react\";\nimport Note from \"./Note.js\";\n\nconst NotesList = (props) => {\n  const keepSearchMatches = (note) => note.doesMatchSearch;\n  const searchMatches = props.notes.filter(keepSearchMatches);\n\n  const renderNote = (note) => (\n    <Note\n      note={note}\n      key={note.id}\n      onType={props.onType}\n      removeNote={props.removeNote}\n    />\n  );\n\n  const noteElements = searchMatches.map(renderNote);\n  return <ul className=\"notes-list\">{noteElements}</ul>;\n};\n\nexport default NotesList;\n","import React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport NoteList from \"./NoteList.js\";\n\n/* This container component manages all of the state \nfor this application, delegating rendering logic to \npresentational components. */\nclass App extends Component {\n  state = {\n    notes: [],\n    searchText: \"\"\n  };\n  addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    };\n    const newNotes = [newNote, ...this.state.notes];\n    this.setState({ notes: newNotes });\n  };\n\n  removeNote = (noteId) => {\n    const updatedNotes = this.state.notes.filter((note) => note.id !== noteId);\n    this.setState({ notes: updatedNotes });\n  };\n\n  onType = (noteId, updatedKey, updatedValue) => {\n    const updatedNotes = this.state.notes.map((note) => {\n      if (note.id !== noteId) {\n        return note;\n      } else {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      }\n    });\n    this.setState({ notes: updatedNotes });\n  };\n\n  onSearch = (text) => {\n    const newSearchText = text.toLowerCase();\n    const updatedNotes = this.state.notes.map((note) => {\n      if (!newSearchText) {\n        note.doesMatchSearch = true;\n        return note;\n      } else {\n        const title = note.title.toLowerCase();\n        const description = note.description.toLowerCase();\n        const titleMatch = title.includes(newSearchText);\n        const descriptionMatch = description.includes(newSearchText);\n        const hasMatch = titleMatch || descriptionMatch;\n        note.doesMatchSearch = hasMatch;\n        return note;\n      }\n    });\n    this.setState({\n      searchText: newSearchText,\n      notes: updatedNotes\n    });\n  };\n\n  componentDidMount() {\n    const notesString = localStorage.getItem(\"savedNotes\");\n    if (notesString) {\n      const savedNotes = JSON.parse(notesString);\n      this.setState({ notes: savedNotes });\n    }\n  }\n\n  componentDidUpdate() {\n    const notesString = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"savedNotes\", notesString);\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          searchText={this.state.searchText}\n          addNote={this.addNote}\n          onSearch={this.onSearch}\n        />\n        <NoteList\n          notes={this.state.notes}\n          onType={this.onType}\n          removeNote={this.removeNote}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}